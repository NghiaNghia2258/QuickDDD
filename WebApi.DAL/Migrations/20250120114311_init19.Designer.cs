// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.DAL;

#nullable disable

namespace WebApi.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250120114311_init19")]
    partial class init19
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MajorSubject", b =>
                {
                    b.Property<int>("MajorsId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectsId")
                        .HasColumnType("int");

                    b.HasKey("MajorsId", "SubjectsId");

                    b.HasIndex("SubjectsId");

                    b.ToTable("MajorSubject");

                    b.HasData(
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 1
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 2
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 3
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 4
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 5
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 6
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 7
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 8
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 9
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 10
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 11
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 12
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 13
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 14
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 15
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 16
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 17
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 18
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 19
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 20
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 21
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 22
                        },
                        new
                        {
                            MajorsId = 1,
                            SubjectsId = 23
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 1
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 2
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 3
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 4
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 5
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 6
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 7
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 8
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 9
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 10
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 11
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 12
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 13
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 14
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 15
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 16
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 17
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 18
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 19
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 20
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 21
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 22
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 23
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 24
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 25
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 26
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 27
                        },
                        new
                        {
                            MajorsId = 2,
                            SubjectsId = 28
                        },
                        new
                        {
                            MajorsId = 3,
                            SubjectsId = 1
                        },
                        new
                        {
                            MajorsId = 3,
                            SubjectsId = 2
                        },
                        new
                        {
                            MajorsId = 3,
                            SubjectsId = 3
                        },
                        new
                        {
                            MajorsId = 3,
                            SubjectsId = 4
                        },
                        new
                        {
                            MajorsId = 3,
                            SubjectsId = 5
                        },
                        new
                        {
                            MajorsId = 3,
                            SubjectsId = 6
                        },
                        new
                        {
                            MajorsId = 3,
                            SubjectsId = 7
                        },
                        new
                        {
                            MajorsId = 3,
                            SubjectsId = 29
                        },
                        new
                        {
                            MajorsId = 3,
                            SubjectsId = 30
                        },
                        new
                        {
                            MajorsId = 3,
                            SubjectsId = 31
                        },
                        new
                        {
                            MajorsId = 4,
                            SubjectsId = 1
                        },
                        new
                        {
                            MajorsId = 4,
                            SubjectsId = 2
                        },
                        new
                        {
                            MajorsId = 4,
                            SubjectsId = 3
                        },
                        new
                        {
                            MajorsId = 4,
                            SubjectsId = 4
                        },
                        new
                        {
                            MajorsId = 4,
                            SubjectsId = 5
                        },
                        new
                        {
                            MajorsId = 4,
                            SubjectsId = 6
                        },
                        new
                        {
                            MajorsId = 4,
                            SubjectsId = 32
                        },
                        new
                        {
                            MajorsId = 4,
                            SubjectsId = 33
                        },
                        new
                        {
                            MajorsId = 4,
                            SubjectsId = 34
                        },
                        new
                        {
                            MajorsId = 4,
                            SubjectsId = 35
                        },
                        new
                        {
                            MajorsId = 4,
                            SubjectsId = 36
                        },
                        new
                        {
                            MajorsId = 5,
                            SubjectsId = 1
                        },
                        new
                        {
                            MajorsId = 5,
                            SubjectsId = 2
                        },
                        new
                        {
                            MajorsId = 5,
                            SubjectsId = 3
                        },
                        new
                        {
                            MajorsId = 5,
                            SubjectsId = 4
                        },
                        new
                        {
                            MajorsId = 5,
                            SubjectsId = 37
                        },
                        new
                        {
                            MajorsId = 5,
                            SubjectsId = 38
                        },
                        new
                        {
                            MajorsId = 5,
                            SubjectsId = 39
                        },
                        new
                        {
                            MajorsId = 5,
                            SubjectsId = 40
                        },
                        new
                        {
                            MajorsId = 5,
                            SubjectsId = 41
                        },
                        new
                        {
                            MajorsId = 6,
                            SubjectsId = 9
                        },
                        new
                        {
                            MajorsId = 6,
                            SubjectsId = 8
                        },
                        new
                        {
                            MajorsId = 6,
                            SubjectsId = 7
                        },
                        new
                        {
                            MajorsId = 6,
                            SubjectsId = 4
                        },
                        new
                        {
                            MajorsId = 6,
                            SubjectsId = 5
                        },
                        new
                        {
                            MajorsId = 6,
                            SubjectsId = 6
                        },
                        new
                        {
                            MajorsId = 6,
                            SubjectsId = 42
                        },
                        new
                        {
                            MajorsId = 6,
                            SubjectsId = 43
                        },
                        new
                        {
                            MajorsId = 6,
                            SubjectsId = 44
                        },
                        new
                        {
                            MajorsId = 7,
                            SubjectsId = 1
                        },
                        new
                        {
                            MajorsId = 7,
                            SubjectsId = 2
                        },
                        new
                        {
                            MajorsId = 7,
                            SubjectsId = 3
                        },
                        new
                        {
                            MajorsId = 7,
                            SubjectsId = 4
                        },
                        new
                        {
                            MajorsId = 7,
                            SubjectsId = 45
                        },
                        new
                        {
                            MajorsId = 7,
                            SubjectsId = 46
                        },
                        new
                        {
                            MajorsId = 7,
                            SubjectsId = 47
                        },
                        new
                        {
                            MajorsId = 7,
                            SubjectsId = 48
                        },
                        new
                        {
                            MajorsId = 8,
                            SubjectsId = 1
                        },
                        new
                        {
                            MajorsId = 8,
                            SubjectsId = 2
                        },
                        new
                        {
                            MajorsId = 8,
                            SubjectsId = 3
                        },
                        new
                        {
                            MajorsId = 8,
                            SubjectsId = 48
                        },
                        new
                        {
                            MajorsId = 8,
                            SubjectsId = 49
                        },
                        new
                        {
                            MajorsId = 8,
                            SubjectsId = 50
                        },
                        new
                        {
                            MajorsId = 8,
                            SubjectsId = 51
                        },
                        new
                        {
                            MajorsId = 8,
                            SubjectsId = 52
                        });
                });

            modelBuilder.Entity("RoleRoleGroup", b =>
                {
                    b.Property<int>("RoleGroupsId")
                        .HasColumnType("int");

                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.HasKey("RoleGroupsId", "RolesId");

                    b.HasIndex(new[] { "RolesId" }, "IX_RoleRoleGroup_RolesId");

                    b.ToTable("RoleRoleGroup", (string)null);

                    b.HasData(
                        new
                        {
                            RoleGroupsId = 1,
                            RolesId = 1
                        },
                        new
                        {
                            RoleGroupsId = 2,
                            RolesId = 1
                        },
                        new
                        {
                            RoleGroupsId = 3,
                            RolesId = 3
                        },
                        new
                        {
                            RoleGroupsId = 4,
                            RolesId = 2
                        });
                });

            modelBuilder.Entity("SchoolClassTeacher", b =>
                {
                    b.Property<int>("SchoolClassesId")
                        .HasColumnType("int");

                    b.Property<int>("TeachersId")
                        .HasColumnType("int");

                    b.HasKey("SchoolClassesId", "TeachersId");

                    b.HasIndex("TeachersId");

                    b.ToTable("SchoolClassTeacher", (string)null);
                });

            modelBuilder.Entity("SubjectTeacher", b =>
                {
                    b.Property<int>("SubjectsId")
                        .HasColumnType("int");

                    b.Property<int>("TeachersId")
                        .HasColumnType("int");

                    b.HasKey("SubjectsId", "TeachersId");

                    b.HasIndex("TeachersId");

                    b.ToTable("SubjectTeacher");
                });

            modelBuilder.Entity("WebApi.Domain.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "CS",
                            IsDeleted = false,
                            Name = "Công nghệ thông tin",
                            Version = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "EE",
                            IsDeleted = false,
                            Name = "Kỹ thuật điện",
                            Version = 0
                        },
                        new
                        {
                            Id = 3,
                            Code = "ME",
                            IsDeleted = false,
                            Name = "Cơ khí",
                            Version = 0
                        },
                        new
                        {
                            Id = 4,
                            Code = "CE",
                            IsDeleted = false,
                            Name = "Xây dựng",
                            Version = 0
                        });
                });

            modelBuilder.Entity("WebApi.Domain.Models.Major", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Majors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "101",
                            FacultyId = 1,
                            IsDeleted = false,
                            Name = "Khoa học máy tính",
                            Version = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "125",
                            FacultyId = 1,
                            IsDeleted = false,
                            Name = "Kỹ thuật phần mềm",
                            Version = 0
                        },
                        new
                        {
                            Id = 3,
                            Code = "210",
                            FacultyId = 2,
                            IsDeleted = false,
                            Name = "Hệ thông điện",
                            Version = 0
                        },
                        new
                        {
                            Id = 4,
                            Code = "225",
                            FacultyId = 2,
                            IsDeleted = false,
                            Name = "Điện công nghiệp và dân dụng",
                            Version = 0
                        },
                        new
                        {
                            Id = 5,
                            Code = "315",
                            FacultyId = 3,
                            IsDeleted = false,
                            Name = "Sức bền vật liệu",
                            Version = 0
                        },
                        new
                        {
                            Id = 6,
                            Code = "323",
                            FacultyId = 3,
                            IsDeleted = false,
                            Name = "Khí động học",
                            Version = 0
                        },
                        new
                        {
                            Id = 7,
                            Code = "411",
                            FacultyId = 4,
                            IsDeleted = false,
                            Name = "Kỹ thuật xây dựng",
                            Version = 0
                        },
                        new
                        {
                            Id = 8,
                            Code = "431",
                            FacultyId = 4,
                            IsDeleted = false,
                            Name = "Kỹ thuật vật liệu",
                            Version = 0
                        });
                });

            modelBuilder.Entity("WebApi.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "CREATE_TEACHER",
                            Name = "CREATE_TEACHER",
                            Version = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "RULE_STUDENT",
                            Name = "RULE_STUDENT",
                            Version = 0
                        },
                        new
                        {
                            Id = 3,
                            Code = "RULE_TEACHER",
                            Name = "RULE_TEACHER",
                            Version = 0
                        });
                });

            modelBuilder.Entity("WebApi.Domain.Models.RoleGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoleGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "ADMIN",
                            Name = "Admin",
                            Version = 0
                        },
                        new
                        {
                            Id = 3,
                            Code = "TEACHER",
                            Name = "Teacher",
                            Version = 0
                        },
                        new
                        {
                            Id = 4,
                            Code = "STUDENT",
                            Name = "Student",
                            Version = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "USER",
                            Name = "User",
                            Version = 0
                        });
                });

            modelBuilder.Entity("WebApi.Domain.Models.SchoolClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailableSlots")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HomeroomTeacherId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailableSlot")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MajorId")
                        .HasColumnType("int");

                    b.Property<int>("MaxStudents")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HomeroomTeacherId");

                    b.HasIndex("MajorId");

                    b.ToTable("SchoolClasses");
                });

            modelBuilder.Entity("WebApi.Domain.Models.SchoolClassStudent", b =>
                {
                    b.Property<int>("SchoolClassesId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("SchoolClassesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("SchoolClassStudent");
                });

            modelBuilder.Entity("WebApi.Domain.Models.SchoolClassTeacherSubject", b =>
                {
                    b.Property<int>("SchoolClassId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("SchoolClassId", "TeacherId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("SchoolClassTeacherSubject");
                });

            modelBuilder.Entity("WebApi.Domain.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnrollmentYear")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserLoginId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("Ward")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserLoginId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WebApi.Domain.Models.StudentFee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("CollectedAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId1")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId1");

                    b.ToTable("StudentFees");
                });

            modelBuilder.Entity("WebApi.Domain.Models.StudentFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentGradeId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentGradeId");

                    b.ToTable("StudentFeedback");
                });

            modelBuilder.Entity("WebApi.Domain.Models.StudentGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AttendanceGrade")
                        .HasColumnType("float");

                    b.Property<double>("ExamGrade")
                        .HasColumnType("float");

                    b.Property<double>("HomeworkGrade")
                        .HasColumnType("float");

                    b.Property<double>("PracticalGrade")
                        .HasColumnType("float");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentGrades");
                });

            modelBuilder.Entity("WebApi.Domain.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExerciseCredits")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIncludedInGPA")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PracticeCredits")
                        .HasColumnType("int");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<int>("TheoryCredits")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "TCC",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Toán cao cấp",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "VLDC",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Vật lý đại cương",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 3,
                            Code = "OOP",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Lập trình hướng đối tượng",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 4,
                            Code = "HDC",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Hóa học đại cương",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 5,
                            Code = "TML",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Triết học Mác - Lênin",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 6,
                            Code = "KTML",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Kinh tế chính trị Mác - Lênin",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 7,
                            Code = "GDQP",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Giáo dục quốc phòng - an ninh",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 8,
                            Code = "GDTC",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Giáo dục thể chất",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 9,
                            Code = "KNM",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Kỹ năng mềm",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 10,
                            Code = "TACB",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Tiếng Anh cơ bản",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 11,
                            Code = "LLCT",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Lý luận chính trị",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 12,
                            Code = "VHDG",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Văn hóa đại cương",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 13,
                            Code = "TDK",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Tư duy khoa học",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 14,
                            Code = "CSDLTG",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Cấu trúc dữ liệu và giải thuật",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 15,
                            Code = "HOC",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Học máy",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 16,
                            Code = "KHMT",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Kỹ thuật lập trình",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 17,
                            Code = "CS",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Cơ sở dữ liệu",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 18,
                            Code = "TNSP",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Tin học và hệ thống phần mềm",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 19,
                            Code = "HTH",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Hệ thống thông tin",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 20,
                            Code = "ATTT",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "An toàn thông tin",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 21,
                            Code = "MTT",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Mạng máy tính",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 22,
                            Code = "PTUD",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Phát triển ứng dụng di động",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 23,
                            Code = "CC",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Công cụ lập trình",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 24,
                            Code = "QLDJPM",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Quản lý dự án phần mềm",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 25,
                            Code = "KTPM",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Kiểm thử phần mềm",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 26,
                            Code = "LTPM",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Lập trình mạng",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 27,
                            Code = "LPCT",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Lập trình C++",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 28,
                            Code = "LTPY",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Lập trình Python",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 29,
                            Code = "HTD",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Hệ thống điều khiển",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 30,
                            Code = "TDTH",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Thiết kế hệ thống điện tự động",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 31,
                            Code = "DTHD",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Điện tử công nghiệp",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 32,
                            Code = "HTDC",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Hệ thống điện công nghiệp",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 33,
                            Code = "TDCN",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Thiết kế điện công nghiệp",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 34,
                            Code = "CVDH",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Cấu trúc và vận hành của mạng điện",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 35,
                            Code = "QLNGE",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Quản lý năng lượng và hiệu suất",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 36,
                            Code = "KTDCD",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Kỹ thuật điều khiển điện",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 37,
                            Code = "CHVL",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Cơ học vật liệu",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 38,
                            Code = "PAUBD",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Phân tích ứng suất và biến dạng",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 39,
                            Code = "TKKC",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Tính toán kết cấu",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 40,
                            Code = "CHVR",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Cơ học vật rắn",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 41,
                            Code = "CHPH",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Cơ học phá hủy",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 42,
                            Code = "CHCL",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Cơ học chất lưu",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 43,
                            Code = "DLDVT",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Động lực học của vật thể",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 44,
                            Code = "KTKDH",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Kỹ thuật khí động học",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 45,
                            Code = "KCBTCT",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Kết cấu bê tông cốt thép",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 46,
                            Code = "KTTK",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Kỹ thuật thi công",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 47,
                            Code = "QLDX",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Quản lý dự án xây dựng",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 48,
                            Code = "KTVTXD",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Kỹ thuật vật liệu xây dựng",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 49,
                            Code = "KHVL",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Khoa học vật liệu",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 50,
                            Code = "KTVLCT",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Kỹ thuật vật liệu composite",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 51,
                            Code = "VTXD",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Vật liệu xây dựng",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 52,
                            Code = "CTXLVL",
                            ExerciseCredits = 0,
                            IsDeleted = false,
                            IsIncludedInGPA = false,
                            IsMandatory = false,
                            Name = "Công nghệ xử lý vật liệu",
                            PracticeCredits = 0,
                            Semester = 0,
                            TheoryCredits = 0,
                            Version = 0
                        });
                });

            modelBuilder.Entity("WebApi.Domain.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDepartmentHead")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserLoginId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("UserLoginId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("WebApi.Domain.Models.UserLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleGroupId" }, "IX_UserLogins_RoleGroupId");

                    b.ToTable("UserLogins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Password = "admin123",
                            RoleGroupId = 1,
                            Username = "admin",
                            Version = 0
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Password = "user123",
                            RoleGroupId = 2,
                            Username = "user1",
                            Version = 0
                        });
                });

            modelBuilder.Entity("MajorSubject", b =>
                {
                    b.HasOne("WebApi.Domain.Models.Major", null)
                        .WithMany()
                        .HasForeignKey("MajorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Domain.Models.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoleRoleGroup", b =>
                {
                    b.HasOne("WebApi.Domain.Models.RoleGroup", null)
                        .WithMany()
                        .HasForeignKey("RoleGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Domain.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolClassTeacher", b =>
                {
                    b.HasOne("WebApi.Domain.Models.SchoolClass", null)
                        .WithMany()
                        .HasForeignKey("SchoolClassesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Domain.Models.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeachersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SubjectTeacher", b =>
                {
                    b.HasOne("WebApi.Domain.Models.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Domain.Models.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeachersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.Domain.Models.Major", b =>
                {
                    b.HasOne("WebApi.Domain.Models.Faculty", "Faculty")
                        .WithMany("Majors")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("WebApi.Domain.Models.SchoolClass", b =>
                {
                    b.HasOne("WebApi.Domain.Models.Teacher", "HomeroomTeacher")
                        .WithMany("HomeroomClasses")
                        .HasForeignKey("HomeroomTeacherId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WebApi.Domain.Models.Major", "Major")
                        .WithMany("SchoolClasses")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeroomTeacher");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("WebApi.Domain.Models.SchoolClassStudent", b =>
                {
                    b.HasOne("WebApi.Domain.Models.SchoolClass", "StudentClass")
                        .WithMany("Students")
                        .HasForeignKey("SchoolClassesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Domain.Models.Student", "Student")
                        .WithMany("SchoolClasses")
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("StudentClass");
                });

            modelBuilder.Entity("WebApi.Domain.Models.SchoolClassTeacherSubject", b =>
                {
                    b.HasOne("WebApi.Domain.Models.SchoolClass", "SchoolClass")
                        .WithMany("SchoolClassTeacherSubject")
                        .HasForeignKey("SchoolClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Domain.Models.Subject", "Subject")
                        .WithMany("SchoolClassTeacherSubject")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Domain.Models.Teacher", "Teacher")
                        .WithMany("SchoolClassTeacherSubject")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolClass");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("WebApi.Domain.Models.Student", b =>
                {
                    b.HasOne("WebApi.Domain.Models.UserLogin", "UserLogin")
                        .WithMany()
                        .HasForeignKey("UserLoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("WebApi.Domain.Models.StudentFee", b =>
                {
                    b.HasOne("WebApi.Domain.Models.Student", "Student")
                        .WithMany("StudentFees")
                        .HasForeignKey("StudentId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApi.Domain.Models.StudentFeedback", b =>
                {
                    b.HasOne("WebApi.Domain.Models.StudentGrade", "StudentGrade")
                        .WithMany("StudentFeedbacks")
                        .HasForeignKey("StudentGradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentGrade");
                });

            modelBuilder.Entity("WebApi.Domain.Models.StudentGrade", b =>
                {
                    b.HasOne("WebApi.Domain.Models.Student", "Student")
                        .WithMany("StudentGrades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Domain.Models.Subject", "Subject")
                        .WithMany("StudentGrades")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WebApi.Domain.Models.Teacher", b =>
                {
                    b.HasOne("WebApi.Domain.Models.Faculty", "Faculty")
                        .WithMany("Teachers")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Domain.Models.UserLogin", "UserLogin")
                        .WithMany("Teachers")
                        .HasForeignKey("UserLoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("WebApi.Domain.Models.UserLogin", b =>
                {
                    b.HasOne("WebApi.Domain.Models.RoleGroup", "RoleGroup")
                        .WithMany("UserLogins")
                        .HasForeignKey("RoleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleGroup");
                });

            modelBuilder.Entity("WebApi.Domain.Models.Faculty", b =>
                {
                    b.Navigation("Majors");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("WebApi.Domain.Models.Major", b =>
                {
                    b.Navigation("SchoolClasses");
                });

            modelBuilder.Entity("WebApi.Domain.Models.RoleGroup", b =>
                {
                    b.Navigation("UserLogins");
                });

            modelBuilder.Entity("WebApi.Domain.Models.SchoolClass", b =>
                {
                    b.Navigation("SchoolClassTeacherSubject");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApi.Domain.Models.Student", b =>
                {
                    b.Navigation("SchoolClasses");

                    b.Navigation("StudentFees");

                    b.Navigation("StudentGrades");
                });

            modelBuilder.Entity("WebApi.Domain.Models.StudentGrade", b =>
                {
                    b.Navigation("StudentFeedbacks");
                });

            modelBuilder.Entity("WebApi.Domain.Models.Subject", b =>
                {
                    b.Navigation("SchoolClassTeacherSubject");

                    b.Navigation("StudentGrades");
                });

            modelBuilder.Entity("WebApi.Domain.Models.Teacher", b =>
                {
                    b.Navigation("HomeroomClasses");

                    b.Navigation("SchoolClassTeacherSubject");
                });

            modelBuilder.Entity("WebApi.Domain.Models.UserLogin", b =>
                {
                    b.Navigation("Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
